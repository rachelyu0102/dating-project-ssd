@model WebApplication9.ViewModels.ResetPassword

@{
    ViewBag.Title = "ResetPassword";
}

@if (ViewBag.Message != null)
{
    <div class="alert alert-dismissible col-md-8 col-md-offset-2" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <div class="message-inside">
            <span>@ViewBag.Message</span>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-xs-4 col-xs-offset-4" style="margin-top:20px">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="text" name="passwordToken" value="@ViewBag.PasswordToken" style="display:none" />
        <input type="text" name="userID" value="@ViewBag.UserID" style="display:none" />


        <div class="form-group">
            <label style="padding-left:15px">New password</label>
            <div class="col-xs-12">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label style="padding-left:15px">Confirm password</label>
            <div class="col-xs-12">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control input-sm" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-12">
                <input type="submit" value="submit" class="btn btn-info" />
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
